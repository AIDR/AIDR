// default package
// Generated Nov 24, 2014 4:55:08 PM by Hibernate Tools 4.0.0
package qa.qcri.aidr.predictdb.entities.task;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import qa.qcri.aidr.predictdb.entities.misc.Crisis;

/**
 * Document generated by hbm2java
 */
@Entity
@Table(name = "document", catalog = "aidr_predict")
public class Document implements java.io.Serializable {

	private Long documentID;
	private Long crisisID;
	private boolean isEvaluationSet;
	private boolean hasHumanLabels;
	private double valueAsTrainingSample;
	private Date receivedAt;
	private String language;
	private String doctype;
	private String data;
	private String wordFeatures;
	private String geoFeatures;
	private Set taskAssignments = new HashSet(0);
	private Set documentNominalLabels = new HashSet(0);

	public Document() {
	}

	public Document(Long crisisID, boolean isEvaluationSet,
			boolean hasHumanLabels, double valueAsTrainingSample,
			Date receivedAt, String language, String doctype, String data) {
		this.crisisID = crisisID;
		this.isEvaluationSet = isEvaluationSet;
		this.hasHumanLabels = hasHumanLabels;
		this.valueAsTrainingSample = valueAsTrainingSample;
		this.receivedAt = receivedAt;
		this.language = language;
		this.doctype = doctype;
		this.data = data;
	}

	public Document(Long crisisID, boolean isEvaluationSet,
			boolean hasHumanLabels, double valueAsTrainingSample,
			Date receivedAt, String language, String doctype, String data,
			String wordFeatures, String geoFeatures, Set taskAssignments,
			Set documentNominalLabels) {
		this.crisisID = crisisID;
		this.isEvaluationSet = isEvaluationSet;
		this.hasHumanLabels = hasHumanLabels;
		this.valueAsTrainingSample = valueAsTrainingSample;
		this.receivedAt = receivedAt;
		this.language = language;
		this.doctype = doctype;
		this.data = data;
		this.wordFeatures = wordFeatures;
		this.geoFeatures = geoFeatures;
		this.taskAssignments = taskAssignments;
		this.documentNominalLabels = documentNominalLabels;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "documentID", unique = true, nullable = false)
	public Long getDocumentID() {
		return this.documentID;
	}

	public void setDocumentID(Long documentID) {
		this.documentID = documentID;
	}

	//@ManyToOne(fetch = FetchType.LAZY)
	//@JoinColumn(name = "crisisID", nullable = false)
	public Long getCrisisID() {
		return this.crisisID;
	}

	public void setCrisisID(Long crisisID) {
		this.crisisID = crisisID;
	}

	@Column(name = "isEvaluationSet", nullable = false)
	public boolean getIsEvaluationSet() {
		return this.isEvaluationSet;
	}

	public void setIsEvaluationSet(boolean isEvaluationSet) {
		this.isEvaluationSet = isEvaluationSet;
	}

	@Column(name = "hasHumanLabels", nullable = false)
	public boolean getHasHumanLabels() {
		return this.hasHumanLabels;
	}

	public void setHasHumanLabels(boolean hasHumanLabels) {
		this.hasHumanLabels = hasHumanLabels;
	}

	@Column(name = "valueAsTrainingSample", nullable = false, precision = 22, scale = 0)
	public double getValueAsTrainingSample() {
		return this.valueAsTrainingSample;
	}

	public void setValueAsTrainingSample(double valueAsTrainingSample) {
		this.valueAsTrainingSample = valueAsTrainingSample;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "receivedAt", nullable = false, length = 19)
	public Date getReceivedAt() {
		return this.receivedAt;
	}

	public void setReceivedAt(Date receivedAt) {
		this.receivedAt = receivedAt;
	}

	@Column(name = "language", nullable = false, length = 5)
	public String getLanguage() {
		return this.language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	@Column(name = "doctype", nullable = false, length = 20)
	public String getDoctype() {
		return this.doctype;
	}

	public void setDoctype(String doctype) {
		this.doctype = doctype;
	}

	@Column(name = "data", nullable = false, length = 65535)
	public String getData() {
		return this.data;
	}

	public void setData(String data) {
		this.data = data;
	}

	@Column(name = "wordFeatures", length = 65535)
	public String getWordFeatures() {
		return this.wordFeatures;
	}

	public void setWordFeatures(String wordFeatures) {
		this.wordFeatures = wordFeatures;
	}

	@Column(name = "geoFeatures", length = 65535)
	public String getGeoFeatures() {
		return this.geoFeatures;
	}

	public void setGeoFeatures(String geoFeatures) {
		this.geoFeatures = geoFeatures;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set getTaskAssignments() {
		return this.taskAssignments;
	}

	public void setTaskAssignments(Set taskAssignments) {
		this.taskAssignments = taskAssignments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set getDocumentNominalLabels() {
		return this.documentNominalLabels;
	}

	public void setDocumentNominalLabels(Set documentNominalLabels) {
		this.documentNominalLabels = documentNominalLabels;
	}

}
