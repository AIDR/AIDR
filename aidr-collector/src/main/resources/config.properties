#
# Configuration for aidr-collector
#

#############################
# MANDATORY configuration
# Values must be set at each installation
#############################

#REST URI for AIDR collector 
FETCHER_REST_URI=http://${COLLECTOR_HOST}:${COLLECTOR_PORT}/${COLLECTOR_WEB_APP_CONTEXT}/webresources/

#REST URI of AIDR persister
PERSISTER_REST_URI=http://${PERSISTER_HOST}:${PERSISTER_PORT}/${PERSISTER_WEB_APP_CONTEXT}/webresources/

#REST URI of AIDR Tagger API
TAGGER_REST_URI=http://${TAGGER_API_HOST}:${TAGGER_API_PORT}/${TAGGER_API_WEB_APP_CONTEXT}/rest

#############################
# OPTIONAL configuration
# Values can be left at their default values
#############################

LANGUAGE_ALLOWED_ALL=ANY

#Default persister related parameters
DEFAULT_PERSISTANCE_MODE=true

# Redis paramters
FETCHER_CHANNEL=${COLLECTOR_CHANNEL_BASENAME}
TAGGER_CHANNEL=${TAGGER_CHANNEL_BASENAME}

# Specifies when items counter should be updated. Here 5 means after every 5 items
FETCHER_REDIS_COUNTER_UPDATE_THRESHOLD=5

# AIDR-COLLECTOR logging
#errorlog.txt
LOG_FILE_NAME=AIDR_Collector_LOG.txt

#Twitter configuration params

#Reconnection config for TCP/IP errors - linear back-off strategy will be used here
RECONNECT_NET_FAILURE_WAIT_SECONDS=60
RECONNECT_NET_FAILURE_RETRY_ATTEMPTS=5

#This is the wait time recommended by Twitter in case of Rate Limit - exponential back-off strategy will be used 
RECONNECT_RATE_LIMIT_WAIT_SECONDS=60
RECONNECT_RATE_LIMIT_RETRY_ATTEMPTS=5

#This is the wait time recommended by Facebook in case of Rate Limit
FACEBOOK_MAX_API_HITS_HOURLY_PER_USER=200
FACEBOOK_LOAD_CHECK_INTERVAL_MINUTES=60

#For HTTP error 503 (service unavailable) - linear back-off strategy will be used here
RECONNECT_SERVICE_UNAVAILABLE_WAIT_SECONDS=60
RECONNECT_SERVICE_UNAVAILABLE_RETRY_ATTEMPTS=5


#############################
# FIXED configuration
# Values should not be changed, as they may
# require changes in other parts of the application.
#############################

# Response status codes
STATUS_CODE_COLLECTION_INITIALIZING=INITIALIZING
STATUS_CODE_COLLECTION_RUNNING=RUNNING
STATUS_CODE_COLLECTION_ERROR=FATAL_ERROR
STATUS_CODE_COLLECTION_RUNNING_WARNING=RUNNING_WARNING
STATUS_CODE_COLLECTION_NOTFOUND=NOT_FOUND
STATUS_CODE_COLLECTION_STOPPED=STOPPED
STATUS_CODE_COLLECTION_EXCEPTION=EXCEPTION

#############################
# INHERITED configuration
# Values are inherited from common configuration
#############################

INPUT_PORT=${INPUT_PORT}
OUTPUT_PORT=${OUTPUT_PORT}
PERSISTER_LOAD_LIMIT=${PERSISTER_LOAD_LIMIT}
PERSISTER_LOAD_CHECK_INTERVAL_MINUTES=${PERSISTER_LOAD_CHECK_INTERVAL_MINUTES}
STATUS_CODE_SUCCESS = ${STATUS_CODE_SUCCESS}
STATUS_CODE_ERROR = ${STATUS_CODE_ERROR}
STATUS_CODE_WARNING = ${STATUS_CODE_WARNING}
REDIS_HOST = ${REDIS_HOST}
REDIS_PORT = ${REDIS_PORT}

collection.count.update.cron=0/30 * * * * ?

# Twitter specific configurations
twitter.consumerKey=${twitter.consumerKey}
twitter.consumerSecret=${twitter.consumerSecret}

# Facebook specific configurations
facebook.consumerKey=${facebook.consumerKey}
facebook.consumerSecret=${facebook.consumerSecret}