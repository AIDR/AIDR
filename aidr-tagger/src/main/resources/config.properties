#
# Configuration for aidr-tagger
#

#############################
# MANDATORY configuration
# Values must be set at each installation
#############################
# MySQL connection details
mysql_path=jdbc:${SQL_SERVER_TYPE}://${SQL_SERVER_HOST}:${SQL_SERVER_PORT}/${TAGGER_DB_NAME}
mysql_username=${TAGGER_DB_USERNAME}
mysql_password=${TAGGER_DB_PASSWORD}

# URL to Redis server
redis_host=${REDIS_HOST}

#############################
# OPTIONAL configuration
# Values can be left at their default values
#############################
# Replace console with a filename to log to file
log_file_name=console

# Permitted values are INFO, WARNING and ERROR
log_level=INFO

# Path to a folder where trained models are stored
model_store_path=${MODEL_STORAGE_PATH}

# Ports used for HTTP communication with external providers and consumers
http_input_port=8765
http_output_port=8766

# Name of pubsub channel to which the AIDR Fetcher module publishes tweets
redis_input_channel=${COLLECTOR_CHANNEL_BASENAME}.*

# The predict module outputs documents to pubsub channels with the name
# [prefix].[crisis_name] (without brackets). The value below is the prefix.
redis_output_channel_prefix=${TAGGER_CHANNEL_BASENAME}

# Names of redis queues used for internal message passing in the predict module
redis_for_extraction_queue=extraction_stream
redis_for_classification_queue=classification_stream
redis_for_output_queue=classified_output_stream
redis_training_sample_info_queue=training_sample_info_stream
redis_next_model_id=next_model_id
redis_label_task_write_queue=label_task_write_stream

# Maximum number of unlabeled documents to keep as labeling tasks for each
# crisis. If the value is set too high, documents may no longer be useful
# as training samples once they are labeled. If the value is too low, the buffer
# may become empty if workers label items very rapidly. Default is 100.
labeling_task_buffer_max_length=10000

# Rate limits for writing labeling tasks to the database
max_task_write_fq_ms=2000
max_new_tasks_per_minute=150
min_truncate_interval_ms=500
truncate_run_interval_ms=900000

# Reserved value used to represent the absence of an attribute value
# (e.g. color: {null, red, green, blue})
nominal_attribute_null_value=null

# Model default re-training threshold
sampleCountThreshold=50

# Related to Load shedding
# messages/interval
persister_load_limit=${PERSISTER_LOAD_LIMIT}
# in minutes
persister_load_check_interval_minutes=${PERSISTER_LOAD_CHECK_INTERVAL_MINUTES}

# related to logging rate
LOG_INTERVAL_MINUTES=2

#EJB Remote JNDI Name Lookup
REMOTE_TASK_MANAGER_JNDI_NAME=${REMOTE_DB_MANAGER_JNDI_PREFIX}/TaskManagerBean!qa.qcri.aidr.dbmanager.ejb.remote.facade.TaskManagerRemote

#Model retraining related parameters: added by Koushik
PERFORMANCE_IMPROVEMENT_MARGIN=0.05
TRAINING_EXAMPLES_FORCE_RETRAIN=100

# This is the maximum jaccard similarity of two items in the task buffer.
# In the current implementation, the check is only done against a small
# pool of the TAGGER_TASK_BUFFER_SIMILARITY_BUFFER most recent items.
TAGGER_TASK_BUFFER_MAX_SIMILARITY = 0.5

# This is the in-memory buffer of the latest items against
# which similarity is compared
TAGGER_TASK_BUFFER_SIMILARITY_BUFFER = 50

# tagger API module : root url
TAGGER_API_ROOT=http://${TAGGER_API_HOST}:${TAGGER_API_PORT}/${TAGGER_API_WEB_APP_CONTEXT}/rest

# trainer API module : root url
TRAINER_API_ROOT=http://${TRAINER_API_HOST}:${TRAINER_API_PORT}/${TRAINER_API_WEB_APP_CONTEXT}/rest